{{- if eq .Values.global.grafanaLocation "on-cluster" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-monitor-grafana
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-monitor-grafana
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-monitor-grafana
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.grafana.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.grafana.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.grafana.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.grafana.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.grafana.nodeAffinityPreset.type "key" .Values.grafana.nodeAffinityPreset.key "values" .Values.grafana.nodeAffinityPreset.values ) | nindent 10 }}
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      containers:
      - name: drycc-monitor-grafana
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/grafana:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- end }}
        {{- if or (.Values.grafana.limitsCpu) (.Values.grafana.limitsMemory)}}
        resources:
          limits:
            {{- if (.Values.grafana.limitsCpu) }}
            cpu: {{.Values.grafana.limitsCpu}}
            {{- end}}
            {{- if (.Values.grafana.limitsMemory) }}
            memory: {{.Values.grafana.limitsMemory}}
            {{- end}}
        {{- end}}
        ports:
        - containerPort: 3000
          name: ui
        {{- include "grafana.envs" . | indent 8 }}
      {{- if .Values.grafana.persistence.enabled }}
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: drycc-monitor-grafana
      {{- end }}
{{- end }}
